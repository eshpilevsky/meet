{"version":3,"sources":["components/App.js"],"names":["Room","ReactLazyPreload","connect","state","room","areStatesEqual","next","prev","props","id","useParams","toLowerCase","useEffect","preload","joined","fallback","roomId"],"mappings":"8FAAA,oEAQMA,EAAOC,aAAiB,kBAAM,+DA2CrBC,6BALS,SAACC,GAAD,MACtB,CACAC,KAAOD,EAAMC,QAKd,KACA,KACA,CACCC,eAAiB,SAACC,EAAMC,GAEvB,OACCA,EAAKH,OAASE,EAAKF,OARRF,EAzCH,SAACM,GAEZ,IACCJ,EACGI,EADHJ,KAGKK,EAAKC,cAAYD,GAAGE,cAS1B,OAPAC,qBAAU,WAETZ,EAAKa,YAGH,IAEET,EAAKU,OASR,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACC,cAACf,EAAD,MAPD,cAAC,IAAD,CAAYgB,OAAQP","file":"static/js/app.1090eeea.chunk.js","sourcesContent":["import React, { useEffect, Suspense } from 'react';\nimport { useParams } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport JoinDialog from './JoinDialog';\nimport LoadingView from './LoadingView';\nimport { ReactLazyPreload } from './ReactLazyPreload';\n\nconst Room = ReactLazyPreload(() => import(/* webpackChunkName: \"room\" */ './Room'));\n\nconst App = (props) =>\n{\n\tconst {\n\t\troom\n\t} = props;\n\n\tconst id = useParams().id.toLowerCase();\n\n\tuseEffect(() =>\n\t{\n\t\tRoom.preload();\n\n\t\treturn;\n\t}, []);\n\n\tif (!room.joined)\n\t{\n\t\treturn (\n\t\t\t<JoinDialog roomId={id} />\n\t\t);\n\t}\n\telse\n\t{\n\t\treturn (\n\t\t\t<Suspense fallback={<LoadingView />}>\n\t\t\t\t<Room />\n\t\t\t</Suspense>\n\t\t);\n\t}\n};\n\nApp.propTypes =\n{\n\troom : PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) =>\n\t({\n\t\troom : state.room\n\t});\n\nexport default connect(\n\tmapStateToProps,\n\tnull,\n\tnull,\n\t{\n\t\tareStatesEqual : (next, prev) =>\n\t\t{\n\t\t\treturn (\n\t\t\t\tprev.room === next.room\n\t\t\t);\n\t\t}\n\t}\n)(App);"],"sourceRoot":""}